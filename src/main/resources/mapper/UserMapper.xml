<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.angularpractice.repository.UserMapper">
    <resultMap id="BaseResultMap" type="com.demo.angularpractice.entity.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE FROM users
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.demo.angularpractice.entity.User">
        INSERT INTO users (id, name, username,
                           password)
        VALUES (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR},
                #{password,jdbcType=VARCHAR})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.demo.angularpractice.entity.User">
        UPDATE users
        SET name     = #{name,jdbcType=VARCHAR},
            username = #{username,jdbcType=VARCHAR},
            password = #{password,jdbcType=VARCHAR}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT
            id,
            name,
            username,
            password
        FROM users
        WHERE id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        SELECT
            id,
            name,
            username,
            password
        FROM users
    </select>
</mapper>